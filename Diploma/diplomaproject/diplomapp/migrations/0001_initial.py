# Generated by Django 5.0.3 on 2024-04-26 15:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Имя")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Мужчина"), ("F", "Женщина")], max_length=50
                    ),
                ),
                ("phone_number", models.CharField(max_length=16, unique=True)),
                ("text", models.TextField(verbose_name="Запрос")),
            ],
            options={
                "verbose_name": "Форма запроса",
                "verbose_name_plural": "Формы запроса",
                "db_table": "customer",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "SpecialistAccounts",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="SpecialistProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("firstname", models.CharField(max_length=50, verbose_name="Имя")),
                ("lastname", models.CharField(max_length=50, verbose_name="Фамилия")),
                (
                    "patronimic",
                    models.CharField(
                        max_length=128, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "phonenumber",
                    models.CharField(
                        max_length=16, unique=True, verbose_name="Номер телефона"
                    ),
                ),
                ("about", models.TextField(max_length=300, verbose_name="О себе")),
                ("age", models.IntegerField(default=18, verbose_name="Возраст")),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Мужчина"), ("F", "Женщина")], max_length=50
                    ),
                ),
                (
                    "registered",
                    models.DateTimeField(auto_now_add=True, verbose_name="Registered"),
                ),
                (
                    "avatar",
                    models.ImageField(
                        default=None,
                        upload_to="",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=("png", "jpg", "jpeg")
                            )
                        ],
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("reviews", models.TextField(max_length=300, verbose_name="Отзывы")),
                (
                    "diplomas",
                    models.ImageField(
                        default=None, upload_to="", verbose_name="Дипломы"
                    ),
                ),
                ("city", models.CharField(max_length=128, verbose_name="Город")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["registered", "rating", "age", "city"],
            },
        ),
        migrations.CreateModel(
            name="Diploma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("diploma_upload", models.ImageField(upload_to="images/")),
                (
                    "diploma_name",
                    models.TextField(max_length=300, verbose_name="Diploma_name"),
                ),
                (
                    "specialist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="diplomapp.specialistprofile",
                    ),
                ),
            ],
        ),
    ]
